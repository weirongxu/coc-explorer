{
  "name": "coc-explorer",
  "version": "0.24.4",
  "description": "explorer for coc.nvim",
  "main": "lib/index.js",
  "types": "lib/index.d.ts",
  "repository": "git@github.com:weirongxu/coc-explorer.git",
  "author": "Weirong Xu <weirongxu.raidou@gmail.com>",
  "publisher": "weirongxu",
  "homepage": "https://github.com/weirongxu/coc-explorer",
  "license": "MIT",
  "engines": {
    "coc": "^0.0.80"
  },
  "files": [
    "lib",
    "autoload",
    "plugin"
  ],
  "keywords": [
    "coc.nvim",
    "explorer"
  ],
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "commands": [
      {
        "title": "Open explorer",
        "command": "explorer"
      }
    ],
    "configuration": {
      "definitions": {
        "position": {
          "enum": [
            "left",
            "right",
            "tab",
            "floating"
          ]
        },
        "previewAction.strategy": {
          "description": "Strategy for preview action",
          "enum": [
            "labeling",
            "content"
          ]
        },
        "flexible.position": {
          "enum": [
            "left",
            "right",
            "center"
          ]
        },
        "flexible": {
          "type": "object",
          "properties": {
            "grow": {
              "$ref": "#/definitions/flexible.position"
            },
            "omit": {
              "$ref": "#/definitions/flexible.position"
            }
          }
        },
        "mapping.action.wait.timeout": {
          "type": "number",
          "default": 1000
        },
        "mapping.keyMappings": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/mapping.actionExp"
              },
              {
                "enum": [
                  false
                ]
              }
            ]
          }
        },
        "mapping.actionExp": {
          "anyOf": [
            {
              "$ref": "#/definitions/mapping.action"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/mapping.actionExp"
              }
            }
          ]
        },
        "mapping.action": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "args": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        },
        "bufferFilter": {
          "description": "Filter windows option for select strategy",
          "type": "object",
          "properties": {
            "buftypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filetypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "floatingWindows": {
              "type": "boolean"
            }
          }
        },
        "root.strategy": {
          "enum": [
            "keep",
            "workspace",
            "cwd",
            "sourceBuffer",
            "reveal"
          ],
          "enumDescriptions": [
            "Keep current root",
            "Coc workspace root",
            "Current working directory",
            "Source buffer directory",
            "Reveal file directory"
          ]
        }
      },
      "type": "object",
      "title": "Explorer",
      "properties": {
        "explorer.presets": {
          "description": "Explorer presets",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "root-uri": {
                "type": "string"
              },
              "toggle": {
                "$ref": "#/properties/explorer.toggle"
              },
              "focus": {
                "$ref": "#/properties/explorer.focus"
              },
              "open-action-strategy": {
                "$ref": "#/properties/explorer.openAction.strategy"
              },
              "quit-on-open": {
                "$ref": "#/properties/explorer.quitOnOpen"
              },
              "reveal": {
                "type": "string"
              },
              "sources": {
                "$ref": "#/properties/explorer.sources"
              },
              "position": {
                "$ref": "#/properties/explorer.position"
              },
              "width": {
                "$ref": "#/properties/explorer.width"
              },
              "content-width": {
                "$ref": "#/properties/explorer.contentWidth"
              },
              "content-width-type": {
                "$ref": "#/properties/explorer.contentWidthType"
              },
              "floating-position": {
                "$ref": "#/properties/explorer.floating.position"
              },
              "floating-width": {
                "$ref": "#/properties/explorer.floating.width"
              },
              "floating-height": {
                "$ref": "#/properties/explorer.floating.height"
              },
              "floating-content-width": {
                "$ref": "#/properties/explorer.floating.contentWidth"
              },
              "buffer-root-template": {
                "$ref": "#/properties/explorer.buffer.root.template"
              },
              "buffer-child-template": {
                "$ref": "#/properties/explorer.buffer.child.template"
              },
              "buffer-child-labeling-template": {
                "$ref": "#/properties/explorer.buffer.child.labelingTemplate"
              },
              "file-root-template": {
                "$ref": "#/properties/explorer.file.root.template"
              },
              "file-root-labeling-template": {
                "$ref": "#/properties/explorer.file.root.labelingTemplate"
              },
              "file-child-template": {
                "$ref": "#/properties/explorer.file.child.template"
              },
              "file-child-labeling-template": {
                "$ref": "#/properties/explorer.file.child.labelingTemplate"
              }
            }
          }
        },
        "explorer.mouseMode": {
          "description": "Mouse mode",
          "enum": [
            "none",
            "singleclick",
            "doubleclick"
          ],
          "default": "doubleclick"
        },
        "explorer.keyMappingMode": {
          "description": "Keymapping mode",
          "enum": [
            "none",
            "default"
          ],
          "enumDescriptions": [
            "No default mapping",
            "Default mapping"
          ],
          "default": "default"
        },
        "explorer.keyMappings.global": {
          "description": "Custom global key mappings",
          "$ref": "#/definitions/mapping.keyMappings",
          "default": {}
        },
        "explorer.keyMappings.vmap": {
          "description": "Custom vmap key mappings",
          "$ref": "#/definitions/mapping.keyMappings",
          "default": {}
        },
        "explorer.keyMappings.sources": {
          "description": "Custom key mappings in source",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/mapping.keyMappings",
            "default": {}
          },
          "default": {}
        },
        "explorer.toggle": {
          "description": "Close the explorer if it exists",
          "type": "boolean",
          "default": true
        },
        "explorer.focus": {
          "description": "Focus to explorer when opened",
          "type": "boolean",
          "default": true
        },
        "explorer.position": {
          "description": "Explorer position",
          "anyOf": [
            {
              "$ref": "#/definitions/position"
            },
            {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/position"
                },
                {
                  "type": "string"
                }
              ],
              "minItems": 1
            }
          ],
          "default": "left"
        },
        "explorer.width": {
          "description": "Width of explorer window for open in left or right side",
          "type": "integer",
          "default": 40
        },
        "explorer.contentWidth": {
          "description": "Content width, use negative value or zero to as `width - value`",
          "type": "integer",
          "default": 0
        },
        "explorer.contentWidthType": {
          "description": "Type of content width",
          "enum": [
            "win-width",
            "vim-width"
          ],
          "default": "vim-width"
        },
        "explorer.floating.position": {
          "description": "Position of Explorer for floating window",
          "anyOf": [
            {
              "enum": [
                "left-center",
                "right-center",
                "center",
                "center-top"
              ]
            },
            {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "items": {
                "type": "integer"
              }
            }
          ],
          "default": "center"
        },
        "explorer.floating.width": {
          "description": "Width of explorer window when position is floating, use negative value or zero to as `width - value`",
          "type": "integer",
          "default": -10
        },
        "explorer.floating.height": {
          "description": "Height of explorer window when position is floating, use negative value or zero to as `height - value`",
          "type": "integer",
          "default": -10
        },
        "explorer.floating.contentWidth": {
          "description": "Width of content when position is floating, use negative value or zero to as `width - value`",
          "type": "integer",
          "default": 0
        },
        "explorer.floating.border.enable": {
          "type": "boolean",
          "default": true
        },
        "explorer.floating.border.chars": {
          "description": "Border chars for floating window, their order is top/right/bottom/left/topleft/topright/botright/botleft",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "─",
            "│",
            "─",
            "│",
            "┌",
            "┐",
            "┘",
            "└"
          ]
        },
        "explorer.floating.border.title": {
          "type": "string",
          "default": "coc-explorer"
        },
        "explorer.floating.hideOnCocList": {
          "description": "Hide floating window, when opening CocList",
          "type": "boolean",
          "default": true
        },
        "explorer.autoExpandMaxDepth": {
          "description": "Automatically expand maximum depth of one time",
          "type": "integer",
          "default": 20
        },
        "explorer.autoExpandOptions": {
          "description": "Automatically expand options",
          "type": "array",
          "items": {
            "enum": [
              "recursive",
              "compact",
              "uncompact",
              "recursiveSingle"
            ],
            "enumDescriptions": [
              "Recursively",
              "Single child folders will be compressed in a combined node",
              "Reset the combined node",
              "Expand single child folder recursively"
            ]
          },
          "default": [
            "compact",
            "uncompact"
          ]
        },
        "explorer.autoCollapseOptions": {
          "description": "Automatically collapse options",
          "type": "array",
          "items": {
            "enum": [
              "recursive"
            ],
            "enumDescriptions": [
              "Recursively"
            ]
          },
          "default": [
            "recursive"
          ]
        },
        "explorer.quitOnOpen": {
          "description": "quit explorer when open action",
          "type": "boolean",
          "default": false
        },
        "explorer.previewAction.onHover": {
          "description": "Open preview when hovering over on node",
          "anyOf": [
            {
              "enum": [
                false
              ]
            },
            {
              "$ref": "#/definitions/previewAction.strategy"
            },
            {
              "type": "array",
              "maxItems": 2,
              "minItems": 2,
              "items": [
                {
                  "$ref": "#/definitions/previewAction.strategy"
                },
                {
                  "type": "integer",
                  "description": "delay"
                }
              ]
            }
          ],
          "default": false
        },
        "explorer.previewAction.content.maxHeight": {
          "description": "Preview content maximum height",
          "type": "number",
          "default": 30
        },
        "explorer.openAction.strategy": {
          "description": "Strategy for open action",
          "enum": [
            "select",
            "split",
            "split.plain",
            "split.intelligent",
            "vsplit",
            "vsplit.plain",
            "vsplit.intelligent",
            "tab",
            "previousBuffer",
            "previousWindow",
            "sourceWindow"
          ],
          "default": "select",
          "enumDescriptions": [
            "Open action use selection UI",
            "Open action use split, intelligent by default",
            "Open action use plain split",
            "Open action use intelligent split",
            "Open action use vsplit, intelligent by default",
            "Open action use plain vsplit",
            "Open action use intelligent vsplit",
            "Open action use tab",
            "Open action use last used buffer",
            "Open action use last used window",
            "Open action use the window where explorer opened"
          ]
        },
        "explorer.openAction.select.filter": {
          "description": "Filter windows for select strategy",
          "allOf": [
            {
              "$ref": "#/definitions/bufferFilter"
            },
            {
              "type": "object",
              "properties": {
                "sources": {
                  "description": "Filter windows for select strategy in source",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/bufferFilter"
                  }
                }
              }
            }
          ],
          "default": {
            "buftypes": [
              "terminal"
            ],
            "filetypes": [
              "vista_kind",
              "qf",
              "tagbar",
              "coctree"
            ],
            "floatingWindows": true,
            "sources": {
              "buffer": {
                "buftypes": []
              }
            }
          }
        },
        "explorer.openAction.for.directory": {
          "description": "The action when you open a directory of file source",
          "$ref": "#/definitions/mapping.actionExp",
          "default": "cd"
        },
        "explorer.openAction.relativePath": {
          "description": "Use relative path when open a file with openAction",
          "type": "boolean",
          "default": false
        },
        "explorer.expandStores": {
          "description": "The expand stores of sources",
          "anyOf": [
            {
              "type": "boolean",
              "description": "enable all expand store or not"
            },
            {
              "type": "object",
              "description": "enable expand stores for specified sources",
              "required": [
                "includes"
              ],
              "properties": {
                "includes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "description": "disable expand stores for specified sources",
              "required": [
                "excludes"
              ],
              "properties": {
                "excludes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          ],
          "default": true
        },
        "explorer.sources": {
          "description": "Explorer sources",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "expand"
            ],
            "properties": {
              "name": {
                "description": "Explorer source name",
                "type": "string",
                "enum": [
                  "bookmark",
                  "buffer",
                  "file"
                ]
              },
              "expand": {
                "description": "Whether to expand it by default",
                "type": "boolean",
                "default": false
              }
            }
          },
          "default": [
            {
              "name": "bookmark",
              "expand": false
            },
            {
              "name": "buffer",
              "expand": false
            },
            {
              "name": "file",
              "expand": true
            }
          ]
        },
        "explorer.root.strategies": {
          "description": "Strategies for root uri",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/root.strategy"
              },
              {
                "type": "string",
                "pattern": "custom:.+",
                "description": "Custom strategy by name"
              }
            ]
          },
          "default": [
            "workspace",
            "cwd",
            "sourceBuffer",
            "reveal"
          ]
        },
        "explorer.root.customRules": {
          "description": "Patterns for root uri",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "patterns": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "bottomUp": {
                "type": "boolean",
                "description": "Search outward from the current buffer, default is false",
                "default": false
              }
            },
            "required": [
              "patterns"
            ]
          },
          "defaultSnippets": [
            {
              "vcs": {
                "patterns": [
                  ".git",
                  ".hg",
                  ".projections.json"
                ]
              }
            }
          ]
        },
        "explorer.enableFloatinput": {
          "description": "Enable integrated with coc-floatinput",
          "type": "boolean",
          "default": true
        },
        "explorer.icon.enableNerdfont": {
          "description": "Enable nerdfont",
          "type": "boolean",
          "default": false
        },
        "explorer.icon.source": {
          "description": "The source or file type icon and color",
          "enumDescriptions": [
            "builtin",
            "https://github.com/ryanoasis/vim-devicons",
            "https://github.com/kyazdani42/nvim-web-devicons",
            "https://github.com/lambdalisue/nerdfont.vim"
          ],
          "enum": [
            "builtin",
            "vim-devicons",
            "nvim-web-devicons",
            "nerdfont.vim"
          ],
          "default": "builtin"
        },
        "explorer.icon.customIcons": {
          "description": "Custom icons and color highlights",
          "type": "object",
          "properties": {
            "icons": {
              "type": "object",
              "description": "Icons for extension groups",
              "additionalProperties": {
                "type": "object",
                "description": "Icon for an extension group",
                "required": [
                  "code",
                  "color"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Group icon"
                  },
                  "color": {
                    "type": "string",
                    "description": "Group icon color"
                  }
                }
              }
            },
            "extensions": {
              "type": "object",
              "description": "File extension to icon group"
            },
            "filenames": {
              "type": "object",
              "description": "Filename to icon group"
            },
            "dirnames": {
              "type": "object",
              "description": "Filename to icon group"
            },
            "patternMatches": {
              "type": "object",
              "description": "Pattern to icon group"
            },
            "dirPatternMatches": {
              "type": "object",
              "description": "Pattern to icon group"
            }
          },
          "default": {
            "icons": {},
            "extensions": {},
            "filenames": {},
            "dirnames": {},
            "patternMatches": {},
            "dirPatternMatches": {}
          }
        },
        "explorer.icon.enableVimDevicons": {
          "deprecationMessage": "The configuration `explorer.icon.enableVimDevicons` has been deprecated, please use `{\"explorer.icon.enableNerdfont\": true, \"explorer.icon.source\": \"vim-devicons\"}` instead of it",
          "description": "Enable use vim-devicons instead of built-in icon configuration",
          "type": "boolean"
        },
        "explorer.icon.expanded": {
          "description": "Icon for expanded node",
          "type": "string",
          "default_doc": "-"
        },
        "explorer.icon.collapsed": {
          "description": "Icon for collapsed node",
          "type": "string",
          "default_doc": "+"
        },
        "explorer.icon.selected": {
          "description": "Selection selected chars for File source",
          "type": "string",
          "default": "✓"
        },
        "explorer.icon.hidden": {
          "description": "Icon for hidden status",
          "type": "string",
          "default": "‥"
        },
        "explorer.icon.link": {
          "description": "Icon for soft link",
          "type": "string",
          "default": "→"
        },
        "explorer.icon.readonly": {
          "description": "Icon for readonly",
          "type": "string",
          "default_doc": "RO"
        },
        "explorer.bookmark.root.template": {
          "description": "Template for root node of bookmark source",
          "type": "string",
          "default": "[icon] [title] [hidden & 1]"
        },
        "explorer.bookmark.child.template": {
          "description": "Template for child node of bookmark source",
          "type": "string",
          "default": "[selection | 1] [filename] [position] - [annotation]"
        },
        "explorer.bookmark.child.labelingTemplate": {
          "description": "Labeling template for child node of bookmark source, use for preview when previewAction is labeling",
          "type": "string",
          "default": "[filename][fullpath][position][line][annotation]"
        },
        "explorer.buffer.showHiddenBuffers": {
          "description": "Default show hidden buffers",
          "type": "boolean",
          "default": false
        },
        "explorer.buffer.tabOnly": {
          "description": "Default only show buffers in current tab",
          "type": "boolean",
          "default": false
        },
        "explorer.buffer.root.template": {
          "description": "Template for root node of buffer source",
          "type": "string",
          "default": "[icon] [title] [hidden & 1]"
        },
        "explorer.buffer.child.template": {
          "description": "Template for child node of buffer source",
          "type": "string",
          "default": "[git | 2] [selection | 1] [bufnr] [name][modified][readonly] [fullpath]"
        },
        "explorer.buffer.child.labelingTemplate": {
          "description": "Labeling template for child node of buffer source, use for preview when previewAction is labeling",
          "type": "string",
          "default": "[name][bufname][fullpath][modified][readonly][diagnosticError][diagnosticWarning][git]"
        },
        "explorer.datetime.format": {
          "description": "Explorer datetime format, check out https://date-fns.org/v2.9.0/docs/format",
          "type": "string",
          "default": "yy/MM/dd HH:mm:ss"
        },
        "explorer.file.revealWhenOpen": {
          "deprecationMessage": "Use explorer.file.reveal.whenOpen instead of it",
          "description": "Explorer will automatically reveal to the current buffer when open explorer",
          "type": "boolean"
        },
        "explorer.file.autoReveal": {
          "deprecationMessage": "Use explorer.file.reveal.auto instead of it",
          "description": "Explorer will automatically expand to the current buffer",
          "type": "boolean"
        },
        "explorer.file.reveal.whenOpen": {
          "description": "Explorer will automatically reveal to the current buffer when open explorer",
          "type": "boolean",
          "default": true
        },
        "explorer.file.reveal.auto": {
          "description": "Explorer will automatically reveal to the current buffer when enter a buffer",
          "type": "boolean",
          "default": false
        },
        "explorer.file.reveal.filter": {
          "description": "Exlorer will not automatically reveal to these buffers",
          "type": "object",
          "properties": {
            "patterns": {
              "description": "Filter buffer by RegExp",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "literals": {
              "description": "Filter buffer by literal string",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {}
        },
        "explorer.file.hiddenRules": {
          "description": "Custom hidden rules for file",
          "type": "object",
          "default": {
            "extensions": [
              "o",
              "a",
              "obj",
              "pyc"
            ],
            "filenames": [],
            "patternMatches": [
              "^\\."
            ]
          },
          "properties": {
            "extensions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filenames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "patternMatches": {
              "type": "array",
              "description": "Pattern to icon group"
            }
          }
        },
        "explorer.file.showHiddenFiles": {
          "description": "Default show hidden files",
          "type": "boolean",
          "default": false
        },
        "explorer.file.root.template": {
          "description": "Template for root node of file source",
          "type": "string",
          "default": "[icon] [title] [git & 1][hidden & 1][root] [fullpath]"
        },
        "explorer.file.root.labelingTemplate": {
          "description": "Labeling template for root node of file source, use for preview when previewAction is labeling",
          "type": "string",
          "default": "[fullpath][git]"
        },
        "explorer.file.child.template": {
          "description": "Template for child node file source",
          "type": "string",
          "default": "[git | 2] [selection | clip | 1] [indent][icon | 1] [diagnosticError & 1][filename omitCenter 1][modified][readonly] [linkIcon & 1][link growRight 1 omitCenter 5][size]"
        },
        "explorer.file.child.labelingTemplate": {
          "description": "Labeling template for child node of file source, use for preview when previewAction is labeling",
          "type": "string",
          "default": "[fullpath][link][diagnosticError][diagnosticWarning][git][size][timeAccessed][timeModified][timeCreated][readonly][modified]"
        },
        "explorer.file.column.link.copy": {
          "description": "Whether the file has been copied",
          "type": "string"
        },
        "explorer.file.column.clip.copy": {
          "description": "Whether the file has been copied",
          "type": "string"
        },
        "explorer.file.column.clip.cut": {
          "description": "Whether the file has been cut",
          "type": "string"
        },
        "explorer.file.column.indent.chars": {
          "description": "Indent chars for file source",
          "type": "string",
          "default": "  "
        },
        "explorer.file.column.indent.indentLine": {
          "description": "Whether to display the alignment line",
          "type": "boolean"
        },
        "explorer.file.cdCommand": {
          "description": "Change directory when performing the cd action",
          "enum": [
            false,
            "cd",
            "tcd"
          ],
          "enumDescriptions": [
            "do nothing",
            "cd command",
            "tcd command (nvim only)"
          ],
          "default": false
        },
        "explorer.filename.colored.enable": {
          "description": "Enable colored filenames based on status",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "diagnosticError": {
                  "type": "boolean"
                },
                "diagnosticWarning": {
                  "type": "boolean"
                },
                "git": {
                  "type": "boolean"
                }
              }
            }
          ],
          "default": true
        },
        "explorer.file.git.showUntrackedFiles": {
          "description": "Show untracked file in git",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "enum": [
                "system"
              ],
              "enumDescriptions": [
                "Use system git configuration, status.showUntrackedFiles"
              ]
            }
          ]
        },
        "explorer.trash.command": {
          "description": "Trash command template, arguments(%s source filepath, %l source filepath list), example: 'trash-put %l', 'mv --backup=t %l ~/.trash/'",
          "anyOf": [
            {
              "enum": [
                "nodejs:module",
                "trash-put %s"
              ],
              "enumDescriptions": [
                "Use nodejs module"
              ]
            },
            {
              "description": "Use template string as trash command",
              "type": "string"
            }
          ],
          "default": "nodejs:module"
        },
        "explorer.diagnostic.displayMax": {
          "description": "Maximum count of diagnostic column",
          "type": "integer",
          "default": 99
        },
        "explorer.diagnostic.enableSubscriptNumber": {
          "description": "Subscript number for diagnostic count",
          "type": "boolean",
          "default": false
        },
        "explorer.git.enable": {
          "description": "Enable git",
          "type": "boolean",
          "default": true
        },
        "explorer.git.command": {
          "description": "Git command",
          "type": "string",
          "default": "git"
        },
        "explorer.git.icon.rootStatus.stashed": {
          "description": "Icon for a stash exists for the local repository",
          "default": "$"
        },
        "explorer.git.icon.rootStatus.ahead": {
          "description": "Icon for current branch ahead of upstream",
          "default": "⇡"
        },
        "explorer.git.icon.rootStatus.behind": {
          "description": "Icon for current branch behind upstream",
          "default": "⇣"
        },
        "explorer.git.icon.rootStatus.conflicted": {
          "description": "Icon for current branch has merge conflicts",
          "default": "="
        },
        "explorer.git.icon.rootStatus.untracked": {
          "description": "Icon for there are untracked files in the working directory",
          "default": "?"
        },
        "explorer.git.icon.rootStatus.modified": {
          "description": "Icon for there are file modifications in the working directory",
          "default": "~"
        },
        "explorer.git.icon.rootStatus.added": {
          "description": "Icon for a new file has been added to the staging area",
          "default": "+"
        },
        "explorer.git.icon.rootStatus.renamed": {
          "description": "Icon for a renamed file has been added to the staging area",
          "default": "→"
        },
        "explorer.git.icon.rootStatus.deleted": {
          "description": "Icon for a file's deletion has been added to the staging area",
          "default": "✗"
        },
        "explorer.git.icon.status.mixed": {
          "description": "Icon for git mixed status",
          "type": "string",
          "default": "*"
        },
        "explorer.git.icon.status.unmodified": {
          "description": "Icon for git unmodified status",
          "type": "string",
          "default": " "
        },
        "explorer.git.icon.status.modified": {
          "description": "Icon for git modified status",
          "type": "string",
          "default": "M"
        },
        "explorer.git.icon.status.added": {
          "description": "Icon for git added status",
          "type": "string",
          "default": "A"
        },
        "explorer.git.icon.status.deleted": {
          "description": "Icon for git removed status",
          "type": "string",
          "default": "D"
        },
        "explorer.git.icon.status.renamed": {
          "description": "Icon for git renamed status",
          "type": "string",
          "default": "R"
        },
        "explorer.git.icon.status.copied": {
          "description": "Icon for git copied status",
          "type": "string",
          "default": "C"
        },
        "explorer.git.icon.status.unmerged": {
          "description": "Icon for git unmerged status",
          "type": "string",
          "default": "U"
        },
        "explorer.git.icon.status.untracked": {
          "description": "Icon for git untracked status",
          "type": "string",
          "default": "?"
        },
        "explorer.git.icon.status.ignored": {
          "description": "Icon for git ignored status",
          "type": "string",
          "default": "!"
        },
        "explorer.git.showIgnored": {
          "description": "Show ignored files in git",
          "type": "boolean",
          "default": true
        },
        "explorer.debug": {
          "description": "Enable debug",
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "scripts": {
    "clean": "rimraf lib",
    "build:types": "ts-node scripts/gen_package_type.ts",
    "build:check-type": "tsc --noEmit",
    "build:pack": "node build.js",
    "build:config-doc": "ts-node ./scripts/gen_doc.ts",
    "build": "run-s build:types build:check-type build:pack build:config-doc",
    "esbuild-meta": "npx esbuild-visualizer --metadata ./esbuild-meta.json",
    "watch": "node watch.js",
    "watch:no-emit": "tsc --noEmit --watch",
    "prepare": "run-s clean build",
    "lint": "eslint src --ext .js,.ts",
    "unittest": "jest --runInBand --detectOpenHandles --forceExit",
    "test": "run-s lint unittest"
  },
  "dependencies": {
    "trash": "^7.2.0"
  },
  "devDependencies": {
    "@raidou/eslint-config-base": "^1.5.0",
    "@types/color-convert": "^2.0.0",
    "@types/command-exists": "^1.2.0",
    "@types/jest": "^27.4.0",
    "@types/json-schema": "^7.0.9",
    "@types/lodash-es": "^4.17.5",
    "@types/minimatch": "^3.0.5",
    "@types/node": "^17.0.8",
    "@types/rimraf": "^3.0.2",
    "@types/uuid": "^8.3.4",
    "@types/which": "^2.0.1",
    "coc-floatinput": "^1.5.6",
    "coc-helper": "^0.13.0",
    "coc.nvim": "^0.0.81-next.3",
    "color-convert": "^2.0.1",
    "command-exists": "^1.2.9",
    "date-fns": "^2.28.0",
    "esbuild": "^0.14.11",
    "esbuild-plugin-alias": "^0.2.1",
    "eslint": "^8.6.0",
    "isbinaryfile": "^4.0.8",
    "jest": "^27.4.7",
    "json-schema-to-typescript": "^10.1.5",
    "lodash-es": "^4.17.21",
    "make-dir": "^3.1.0",
    "minimatch": "^3.0.4",
    "npm-run-all": "^4.1.5",
    "open": "^8.4.0",
    "p-filter": "^2.1.0",
    "p-locate": "^5.0.0",
    "pretty-bytes": "^5.6.0",
    "rimraf": "^3.0.2",
    "rxjs": "^7.5.2",
    "ts-jest": "^27.1.2",
    "ts-node": "^10.3.0",
    "type-fest": "^2.9.0",
    "typescript": "^4.5.4",
    "uuid": "^8.3.2",
    "which": "^2.0.2"
  }
}
